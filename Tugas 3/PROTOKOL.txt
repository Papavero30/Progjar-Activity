FILE SERVER
TUJUAN: melayani client dalam request file server

ATURAN PROTOKOL:
- client harus mengirimkan request dalam bentuk string
- string harus dalam format
  REQUEST spasi PARAMETER
- PARAMETER dapat berkembang menjadi PARAMETER1 spasi PARAMETER2 dan seterusnya
- Setiap request harus diakhiri dengan karakter "\r\n\r\n"

REQUEST YANG DILAYANI:
- informasi umum:
  * Jika request tidak dikenali akan menghasilkan pesan
    - status: ERROR
    - data: request tidak dikenali
  * Semua result akan diberikan dalam bentuk JSON dan diakhiri
    dengan character ascii code #13#10#13#10 atau "\r\n\r\n"

LIST
* TUJUAN: untuk mendapatkan daftar seluruh file yang dilayani oleh file server
* PARAMETER: tidak ada
* RESULT:
- BERHASIL:
  - status: OK
  - data: list file
- GAGAL:
  - status: ERROR
  - data: pesan kesalahan

GET
* TUJUAN: untuk mendapatkan isi file dengan menyebutkan nama file dalam parameter
* PARAMETER:
  - PARAMETER1 : nama file
* RESULT:
- BERHASIL:
  - status: OK
  - data_namafile : nama file yang diminta
  - data_file : isi file yang diminta (dalam bentuk base64)
- GAGAL:
  - status: ERROR
  - data: pesan kesalahan

UPLOAD
* TUJUAN: untuk mengunggah file ke server dengan konten file dalam format base64
* PARAMETER:
  - PARAMETER1 : nama file
  - PARAMETER2 : konten file dalam format base64
* RESULT:
- BERHASIL:
  - status: OK
  - data: pesan berhasil
- GAGAL:
  - status: ERROR
  - data: pesan kesalahan

DELETE
* TUJUAN: untuk menghapus file dari server
* PARAMETER:
  - PARAMETER1 : nama file yang akan dihapus
* RESULT:
- BERHASIL:
  - status: OK
  - data: pesan berhasil
- GAGAL:
  - status: ERROR
  - data: pesan kesalahan

PENJELASAN TAMBAHAN:
Protokol ini telah ditingkatkan dengan penambahan kemampuan untuk mengunggah dan menghapus file. Pada operasi UPLOAD, client perlu mengenkode konten file dengan base64 sebelum mengirimkannya ke server, yang kemudian akan mendekode dan menyimpannya. Hal ini memungkinkan pengiriman file binary dengan aman melalui koneksi teks. Semua operasi sekarang mengakhiri pesan dengan "\r\n\r\n" untuk menandai akhir dari request, yang memungkinkan pengiriman data dalam beberapa bagian. Client juga telah dikembangkan untuk menyimpan file yang diunduh di folder 'downloads' lokal untuk organisasi yang lebih baik.

